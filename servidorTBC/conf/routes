# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                       		controllers.Application.index()

# Servicios de tranvia

POST        /tranvias                 		controllers.TranviaController.crearTranvia()

GET         /tranvias                 		controllers.TranviaController.darTranvias()

GET			/tranvias/:id 					controllers.TranviaController.darTranvia(id: Long)

GET			/tranvias/:id/revisiones		controllers.TranviaController.darRevisiones(id: Long)

POST		/tranvias/:id/revisiones		controllers.TranviaController.crearRevision(id: Long)

PUT			/tranvias/:id/:posX/:posY		controllers.TranviaController.actualizarUbicacion(id: Long, posX: Double, posY: Double)

# Servicios de ruta

POST        /rutas                 		controllers.RutaController.crearRuta()

GET 		/rutas                 		controllers.RutaController.darRutas()

GET			/rutas/accidentesTranvias	controllers.RutaController.darRutasAccidenteTranvia()

PUT 		/rutas/:id/accidente/bus/:accidenteEn/:longitud/:latitud controllers.RutaController.alertMobibusAccident(id:Long, accidenteEn : String, longitud : Double, latitud : Double)	

GET			/rutas/accidentesBuses				controllers.RutaController.darRutasAccidentesBus()

GET			/rutas/terminadasTranvia			controllers.RutaController.darRutasTerminadasTranvia()

GET			/rutas/terminadasBus				controllers.RutaController.darRutasTerminadasBus()

PUT			/rutas/:id/accidente/tranvia/:accidenteEn/:longitud/:latitud controllers.RutaController.alertarAccidenteTranvia(id:Long, accidenteEn : String, longitud : Double, latitud : Double)

# PUT /rutas/:id

# Servicios de conductor

# Servicios de estacion

POST		/estaciones					controllers.EstacionController.crearEstacion()

GET			/estaciones					controllers.EstacionController.darEstaciones()				

GET			/estacion/:id 			controllers.EstacionController.darEstacion(id: Long)

GET			/estaciones/ocupacion		controllers.EstacionController.darEstacionesDesocupadas()

#PUT			/estaciones/ocupacion/:id	controllers.EstacionController.actualizarOcupacion(id: Long)


# Servicios de mobibus

POST		/mobibus 					controllers.MobibusController.create()

GET			/mobibus 					controllers.MobibusController.read()

PUT			/mobibus/:id/revisiones     controllers.MobibusController.crearRevision(id:Long)

GET			/mobibus/:id/revisiones 	controllers.MobibusController.darRevisiones(id:Long)

PUT			/mobibus/:id/:posX/:posY	controllers.MobibusController.actualizarUbicacion(id: Long, posX: Double, posY: Double)

# Servicios de vcub	

POST        /vcubs                 		controllers.VcubController.crearVcub()

GET         /vcubs                 		controllers.VcubController.darVcubs()

GET			/vcubs/:id 					controllers.VcubController.darVcub(id: Long)	

PUT			/vcubs/:id/:posX/:posY		controllers.VcubController.actualizarUbicacion(id: Long, posX: Double, posY: Double)

# Servicios de Reserva

GET		/reservas/sinAsignar		controllers.ReservaController.darReservasSinRuta()

GET		/reservas/vencen			controllers.ReservaController.darReservasVencen()

GET		/reservas/:id/ruta 			controllers.ReservaController.asignarRuta(id: Long)

# Servicios de usuario

GET		/usuarios					controllers.UsuarioController.darUsuarios()

POST	/usuarios 					controllers.UsuarioController.crearUsuario()

PUT		/usuarios/reserva 		controllers.UsuarioController.crearReserva()

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file           controllers.Assets.versioned(path="/public", file: Asset)
